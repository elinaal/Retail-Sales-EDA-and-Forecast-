#Data Preparation for Fbprophet

df1 = df1.rename(columns = {'Date':'ds', 'Weekly_Sales':'y'})
df1.tail()

model = Prophet()
# fit the model
model.fit(df1)

future_dates = pd.date_range("20121216","20141230", freq='W')
future_dates = [pd.to_datetime(i) for i in future_dates]
future = pd.DataFrame([dt.datetime.strftime(i, '%Y-%m-%d') for i in future_dates],  columns=['ds'])
forecast = model.predict(future)

print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())
# plot forecast
model.plot(forecast)
plt.show()

dates = pd.date_range("20111126","20121110", freq='W')
dates = [pd.to_datetime(i) for i in dates]
dates_for_forecast = pd.DataFrame([dt.datetime.strftime(i, '%Y-%m-%d') for i in dates],  columns=['ds'])
forecast_dates = model.predict(dates_for_forecast)
# summarize the forecast
print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())
# plot forecast
model.plot(forecast_dates)

plt.plot(df1.ds, df1.y, color = 'red')

plt.show()

df_grouped_20 = df.query('Store == 20')\
    .groupby(['Date', 'IsHoliday', 'CPI', 'Temperature'], as_index = False)\
    .agg({'Weekly_Sales':'sum'})
df_grouped_20.head()

df_grouped_20 = df_grouped_20.rename(columns = {'Date':'ds','Weekly_Sales':'y'})
datetime_series = pd.to_datetime(df_grouped_20['ds'])

datetime_index = pd.DatetimeIndex(datetime_series.values)

Store20_data=df_grouped_20.set_index(datetime_index)
Store20_data.head()
Store20_data.shape
train_data_pr1 = Store20_data.iloc[:len(Store20_data)-40]
test_data_pr1 = Store20_data.iloc[len(Store20_data)-40:]
test_data_pr2 = test_data_pr1[['ds', 'IsHoliday', 'CPI', 'Temperature']]
m1 = Prophet(changepoint_prior_scale=0.05, interval_width=0.95,growth = 'linear',seasonality_mode = 'multiplicative', \
               yearly_seasonality=20, weekly_seasonality=True, changepoint_range=0.9)
m1.add_seasonality('weekly', period=7, fourier_order=15)

m1.add_regressor('IsHoliday')
m1.add_regressor('CPI')
m1.add_regressor('Temperature')
m1.fit(train_data_pr1)

prophet_pred2 = m1.predict(test_data_pr2)


print(prophet_pred2[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail())
# plot forecast
m1.plot(prophet_pred2)


plt.plot(Store20_data.ds, Store20_data.y, color = 'red')

plt.show()

m1.plot_components(prophet_pred2);

Store20_data_2 = Store20_data[['ds', 'IsHoliday', 'CPI', 'Temperature']]
prophet_pred2 = m1.predict(Store20_data_2)


print(prophet_pred2[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail())
# plot forecast
m1.plot(prophet_pred2)


plt.plot(Store20_data.ds, Store20_data.y, color = 'red')

for x in Store20_data[Store20_data['ds']=='2012-12-10']['ds']:
    plt.axvline(x=x, color='purple', linewidth=0.5, ls='--', label='2012-12-10')
    

plt.legend()

plt.show()

prophet_pred3 = prophet_pred2[['ds','yhat']]
df_ds=pd.merge(Store20_data, prophet_pred3, on=['ds'], how='left')
df_ds['diff'] = (df_ds['y']-df_ds['yhat'])/df_ds['y']
x1 = df_ds['ds']
y1 = df_ds['diff']
fig, ax = plt.subplots(figsize=(20,5))
ax.plot(x1.values, y1.values, c='r')

df_ds[['diff']].describe()
